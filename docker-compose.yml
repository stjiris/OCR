volumes:
  elasticsearch_data: {}
  files_data: {}

services:
  server:
    build:
      context: ./server
      dockerfile: ../compose/server/Dockerfile
    image: ocr-server
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      FLASK_DEBUG: 1
      ES_URL: http://elasticsearch:9200
    command: /app/start
    expose:
      - "5001"  # exposed only to other services
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - files_data:/app/_files
    restart: unless-stopped
    networks:
      - internal-network

  worker:
    build:
      context: ./server
      dockerfile: ../compose/worker/Dockerfile
    image: ocr-worker
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      C_FORCE_ROOT: true
      PYTHONUNBUFFERED: true
    command: celery -A celery_app.celery worker --loglevel=debug --without-gossip --without-mingle --without-heartbeat -Ofair -E --hostname=worker1@%h
    volumes:
      - files_data:/app/_files
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - internal-network
      - external-network

  flower:
    image: ocr-worker
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      # NO AUTHENTICATION BY DEFAULT; BASIC AUTH IS UNSAFE
      #FLOWER_BASIC_AUTH: TEMP:PWD
    command: celery -A celery_app.celery flower --port=5050
    expose:
      - "5050"  # exposed only to other services
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - internal-network

  redis:
    image: redis:7.2
    expose:
      - "6379"  # exposed only to other services
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 15
      start_period: 10s
    volumes:
      - files_data:/app/_files
    restart: unless-stopped
    networks:
      - internal-network

  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - server
    volumes:
      - files_data:/usr/share/nginx/html/files
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      CLIENT_MAX_BODY_SIZE: 200M
      PUBLIC_URL: /ocr/
      REACT_APP_API_URL: ./api/
      NODE_ENV: development
    restart: unless-stopped
    networks:
      - internal-network
      - external-network

  elasticsearch:
    build:
      context: ./compose/elasticsearch
      dockerfile: Dockerfile
    expose:
      - "9200"  # exposed only to other services
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200
      interval: 10s
      timeout: 30s
      retries: 15
      start_period: 10s
    restart: unless-stopped
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge
    internal: true
  external-network:
    driver: bridge
