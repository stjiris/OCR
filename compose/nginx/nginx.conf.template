# worker_processes auto;

events {
    worker_connections  1024;
}

http {
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    # ssl_session_cache   shared:SSL:10m;
    # ssl_session_timeout 10m;

    # Uncomment to force upgrade HTTP to HTTPS:
    #server {
    #    listen 80;
    #    server_name _;
    #    return 301 https://$host$request_uri;
    #}

    server {
        include /etc/nginx/mime.types;
        client_max_body_size  2M;

        listen 80;
        # Use this instead to serve HTTPS:
        #listen              443 ssl;
        #http2 on;
        #ssl_certificate     /etc/ssl/certs/nginx-selfsigned.crt;
        #ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        #ssl_protocols       TLSv1.2 TLSv1.3;

        keepalive_timeout   70;

        server_name localhost;

        add_header X-Content-Type-Options "nosniff";

        location / {
            root /usr/share/nginx/html/;
            try_files $uri $uri/ /index.html;
        }

        # Don't serve the shared folder directly
        location /files/ {
            return 404;
        }

        location /api/ {
            proxy_pass            http://server:5001/;
            proxy_read_timeout    1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout    1800;
            send_timeout          1800;
        }

        # Set a higher max body size for the upload route
        location /api/upload-file {
            proxy_pass            http://server:5001/upload-file;
            proxy_read_timeout    1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout    1800;
            send_timeout          1800;
            client_max_body_size  $CLIENT_MAX_BODY_SIZE;
        }

        # Set a higher max body size for the API upload-and-OCR route
        location /api/perform-ocr {
            proxy_pass            http://server:5001/perform-ocr;
            proxy_read_timeout    1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout    1800;
            send_timeout          1800;
            client_max_body_size  $CLIENT_MAX_BODY_SIZE;
        }

        # Rate-limit the login route
        location /api/account/login {
            limit_req zone=login;
            proxy_pass            http://server:5001/account/login;
            proxy_read_timeout    1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout    1800;
            send_timeout          1800;
        }

        # Don't serve Flower as an API endpoint: it's a browser tool
        location /api/admin/flower/ {
             try_files $uri =404;
        }

        # Direct Flower URLs to Flask endpoint
        location /admin/flower/ {
            proxy_pass            http://server:5001/admin/flower/;
            proxy_read_timeout    1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout    1800;
            send_timeout          1800;
        }

        location /images/ {
            alias /usr/share/nginx/html/files/;

            # Don't serve private session images through this location
            location ~* /images/_private_sessions/.* {
                return 404;
            }

            # Serve only extensions that may be stored as document pages, from "_pages" folders
            location ~* /_pages/.+\.(jpg|jpeg|jfif|pjpeg|pjp|png|tif|tiff|bmp|gif|webp|pnm|jp2)$ {
                try_files $uri =404;
            }
            return 404;
        }

        location /private/ {  # TODO: secure private session images
            alias /usr/share/nginx/html/files/_private_sessions/;

            # Serve only extensions that may be stored as document pages, from "_pages" folders
            location ~* /_pages/.+\.(jpg|jpeg|jfif|pjpeg|pjp|png|tif|tiff|bmp|gif|webp|pnm|jp2)$ {
                try_files $uri =404;
            }
            return 404;
        }
    }
}
